" Install vim-plug automatically if it's unavailable in the system
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin(expand('~/.vim/plugged'))

" Search
Plug 'junegunn/fzf', {'do': {-> fzf#install()}}
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree'
Plug 'majutsushi/tagbar' " Requires Exuberant Ctags to be installed in the system

" Linting and autocompletion
Plug 'autozimu/LanguageClient-neovim', {
            \ 'branch': 'next',
            \ 'do': 'bash install.sh',
            \ }
Plug 'ncm2/ncm2'
Plug 'roxma/nvim-yarp'

" Shortcuts
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'junegunn/tabularize'

" Git utilities
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Eyecandies
Plug 'srcery-colors/srcery-vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Language support
Plug 'pangloss/vim-javascript'
Plug 'leafgarland/typescript-vim'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

" Catch-all language support
Plug 'sheerun/vim-polyglot'

call plug#end()

" Relative line number display
set relativenumber
set number

set noshowmode

" Cursor visual indicator
set cursorline
set colorcolumn=80

" Show line and column number
set ruler

" Colors. If you're using terminal for vim, refer to
" https://github.com/srcery-colors/srcery-vim for colorscheme
syntax on
colorscheme srcery

"" Fix backspace indent
set backspace=indent,eol,start

"" Tabs. May get overridden by autocmd rules
set tabstop=4
set softtabstop=0
set shiftwidth=4
set expandtab

"" Map leader to ,
let mapleader=','

"" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

"" Directories for swp files
set nobackup
set noswapfile
set fileformats=unix,dos,mac


" vim-airline
let g:airline_theme = 'minimalist'
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tagbar#enabled = 1
let g:airline_skip_empty_sections = 1

" So we can insert the command faster
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall

" NERDTree options
let g:NERDTreeChDirMode=2
let g:NERDTreeIgnore=['\.rbc$', '\~$', '\.pyc$', '\.db$', '\.sqlite$', '__pycache__']
let g:NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$', '\.bak$', '\~$']
let g:NERDTreeShowBookmarks=1
let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'
let g:NERDTreeWinSize = 40
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite
nnoremap <silent> <F2> :NERDTreeFind<CR>
nnoremap <silent> <C-n> :NERDTreeToggle<CR>

"" Split
noremap <Leader>h :<C-u>split<CR>
noremap <Leader>v :<C-u>vsplit<CR>

" Tagbar
nmap <silent> <C-j> :TagbarToggle<CR>
let g:tagbar_autofocus = 1

" vim-airline
let g:airline#extensions#virtualenv#enabled = 1

" vim-airline
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" powerline symbols
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" Enable ncm2 for all buffers
autocmd BufEnter * call ncm2#enable_for_buffer()

" IMPORTANT: :help Ncm2PopupOpen for more information
set completeopt=noinsert,menuone,noselect

" FZF
noremap <C-p> :Files<CR>

" Highlighting
noremap <Leader>. :noh<CR>

let g:LanguageClient_serverCommands = {'c': ['clangd'], 'go': ['gopls']}

" vim-terraform configuration
" Requires terraform to be installed
let g:terraform_fmt_on_save=1
